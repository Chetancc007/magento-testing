version: "2"
services:
  varnish:
    build:
      context: varnish/
    environment:
      - VIRTUAL_HOST=magento2.docker
      - VIRTUAL_PORT=80
      - HTTPS_METHOD=noredirect
    ports:
      - "80"
    links:
      - web
    volumes:
      - ./logs/varnish/:/var/log

  web:
    build:
      context: nginx/
    ports:
      - "80"
      - "443"
    links:
      - fpm
      - db
    volumes:
      - ./logs/web/:/var/log/nginx
#    command: [nginx-debug, '-g', 'daemon off;']
    volumes_from:
      - appdata
    env_file:
      - ./global.env
#    environment:
#      - VIRTUAL_HOST=magento2.docker
#      - VIRTUAL_PORT=80
#      - HTTPS_METHOD=noredirect

  fpm:
    hostname: fpm.magento2.docker
    build:
      context: php/${PHP_VERSION}-fpm/
    image: ${COMPOSE_PROJECT_NAME}/fpm:${PHP_VERSION}
    ports:
      - "9000"
    links:
      - db
    volumes:
      - ./logs/fpm/:/var/log
    volumes_from:
      - appdata
    env_file:
      - ./global.env

  db:
    image: mariadb:10
    ports:
      - "3306"
    volumes:
      - ./logs/db/:/var/log
    volumes_from:
      - dbdata
    environment:
      - MYSQL_ROOT_PASSWORD=magento2
      - MYSQL_DATABASE=magento2
      - MYSQL_USER=magento2
      - MYSQL_PASSWORD=magento2
      - TERM=meh

  cli:
    hostname: cli.magento2.docker
    build:
      context: php/${PHP_VERSION}-cli/
    image: ${COMPOSE_PROJECT_NAME}/cli:${PHP_VERSION}
    links:
      - db
    volumes:
      - ~/.composer/cache:/root/.composer/cache
      - ./logs/cli/:/var/log
    volumes_from:
      - appdata
    env_file:
      - ./global.env
      - ./composer.env
    environment:
      - M2SETUP_INSTALL_DB=true
      - M2SETUP_DB_HOST=db
      - M2SETUP_DB_NAME=magento2
      - M2SETUP_DB_USER=magento2
      - M2SETUP_DB_PASSWORD=magento2
      - M2SETUP_BASE_URL=http://magento2.docker/
      - M2SETUP_SECURE_BASE_URL=https://magento2.docker/
      - M2SETUP_BACKEND_FRONTNAME=admin
      - M2SETUP_ADMIN_FIRSTNAME=Admin
      - M2SETUP_ADMIN_LASTNAME=User
      - M2SETUP_ADMIN_EMAIL=devteam@harriswebworks.com
      - M2SETUP_ADMIN_USER=admin
      - M2SETUP_ADMIN_PASSWORD=password1
      - M2SETUP_VERSION=${MAGENTO_VERSION}
      - M2SETUP_USE_SAMPLE_DATA=true

  cron:
    build:
      context: php/${PHP_VERSION}-cli/
    image: ${COMPOSE_PROJECT_NAME}/cron:${PHP_VERSION}
    hostname: magento2-cron.docker
    command: run-cron
    env_file:
      - ./global.env    
    environment:
      - ENABLE_SENDMAIL=true
    volumes:
      - ./logs/cron/:/var/log
    volumes_from:
      - appdata
    links:
      - db

  appdata:
    image: tianon/true
    volumes:
      - ./magento:/var/www/magento

  dbdata:
    image: tianon/true
    volumes:
      - /var/lib/mysql
